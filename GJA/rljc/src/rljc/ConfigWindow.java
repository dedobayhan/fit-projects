/*
 * Project: RLJC - Really Lightweight Jabber Client
 * Author:  Petr Zemek, xzemek02@stud.fit.vutbr.cz
 * 
 * Copyright (C) 2009 Petr Zemek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

package rljc;

import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import org.jdesktop.application.Action;

/**
 * Application configuration window.
 */
public class ConfigWindow extends javax.swing.JFrame {
	
	/** Application config. */
	private IConfig appConfig = null;
	
	/**
	 * Creates new form ConfigWindow
	 * 
	 * @param appConf Application configuration.
	 */
	public ConfigWindow(IConfig appConf) {
		appConfig = appConf;
		
		// Standard initialization, done by NetBeans
		initComponents();
		
		// Custom initialization
		setFieldValuesAccToConfig();
	}
	
	/**
	 * Custom initialization according to the values in the configuration.
	 */
	private void setFieldValuesAccToConfig() {
		serverField.setText(appConfig.getHostName());
		useEncryptionCheck.setSelected(appConfig.getUseEncryption());
		userNameField.setText(appConfig.getUserName());
		userPasswordField.setText(appConfig.getUserPassword());

		// Set spinners bounds
		portSpinner.setModel(new SpinnerNumberModel(appConfig.getPort(),
				IConfig.MIN_PORT, IConfig.MAX_PORT, 1));
		maxMultipleChatsSpinner.setModel(new SpinnerNumberModel(appConfig.getMaxMultipleChats(),
				IConfig.MIN_MAX_MULTIPLE_CHATS, IConfig.MAX_MAX_MULTIPLE_CHATS, 1));
		
		// Remove the comma from both spinners
		portSpinner.setEditor(new JSpinner.NumberEditor(portSpinner,"0"));
		maxMultipleChatsSpinner.setEditor(new JSpinner.NumberEditor(maxMultipleChatsSpinner,"0"));
	}

	@Override
	public void setVisible(boolean visible) {
		// This method is overriden because we need to load values
		// from the application configuration when the window will become visible
		if (visible) {
			setFieldValuesAccToConfig();
		}
		
		super.setVisible(visible);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        connTab = new javax.swing.JPanel();
        serverLabel = new javax.swing.JLabel();
        serverField = new javax.swing.JTextField();
        portLabel = new javax.swing.JLabel();
        portSpinner = new javax.swing.JSpinner();
        userNameLabel = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        userPasswordLabel = new javax.swing.JLabel();
        useEncryptionLabel = new javax.swing.JLabel();
        useEncryptionCheck = new javax.swing.JCheckBox();
        userPasswordField = new javax.swing.JPasswordField();
        viewTab = new javax.swing.JPanel();
        maxMultipleChatsLabel = new javax.swing.JLabel();
        maxMultipleChatsSpinner = new javax.swing.JSpinner();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(rljc.App.class).getContext().getResourceMap(ConfigWindow.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        tabs.setName("tabs"); // NOI18N

        connTab.setName("connTab"); // NOI18N
        connTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        serverLabel.setText(resourceMap.getString("serverLabel.text")); // NOI18N
        serverLabel.setName("serverLabel"); // NOI18N
        connTab.add(serverLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        serverField.setText(resourceMap.getString("serverField.text")); // NOI18N
        serverField.setName("serverField"); // NOI18N
        connTab.add(serverField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 150, 20));

        portLabel.setText(resourceMap.getString("portLabel.text")); // NOI18N
        portLabel.setName("portLabel"); // NOI18N
        connTab.add(portLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        portSpinner.setName("portSpinner"); // NOI18N
        connTab.add(portSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, -1, -1));

        userNameLabel.setText(resourceMap.getString("userNameLabel.text")); // NOI18N
        userNameLabel.setName("userNameLabel"); // NOI18N
        connTab.add(userNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        userNameField.setText(resourceMap.getString("userNameField.text")); // NOI18N
        userNameField.setName("userNameField"); // NOI18N
        connTab.add(userNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 150, -1));

        userPasswordLabel.setText(resourceMap.getString("userPasswordLabel.text")); // NOI18N
        userPasswordLabel.setName("userPasswordLabel"); // NOI18N
        connTab.add(userPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        useEncryptionLabel.setText(resourceMap.getString("useEncryptionLabel.text")); // NOI18N
        useEncryptionLabel.setName("useEncryptionLabel"); // NOI18N
        connTab.add(useEncryptionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        useEncryptionCheck.setText(resourceMap.getString("useEncryptionCheck.text")); // NOI18N
        useEncryptionCheck.setName("useEncryptionCheck"); // NOI18N
        connTab.add(useEncryptionCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));

        userPasswordField.setText(resourceMap.getString("userPasswordField.text")); // NOI18N
        userPasswordField.setName("userPasswordField"); // NOI18N
        connTab.add(userPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 150, -1));

        tabs.addTab(resourceMap.getString("connTab.TabConstraints.tabTitle"), connTab); // NOI18N

        viewTab.setName("viewTab"); // NOI18N
        viewTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        maxMultipleChatsLabel.setText(resourceMap.getString("maxMultipleChatsLabel.text")); // NOI18N
        maxMultipleChatsLabel.setName("maxMultipleChatsLabel"); // NOI18N
        viewTab.add(maxMultipleChatsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        maxMultipleChatsSpinner.setName("maxMultipleChatsSpinner"); // NOI18N
        viewTab.add(maxMultipleChatsSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, -1));

        tabs.addTab(resourceMap.getString("viewTab.TabConstraints.tabTitle"), viewTab); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(rljc.App.class).getContext().getActionMap(ConfigWindow.class, this);
        okButton.setAction(actionMap.get("okButtonPressed")); // NOI18N
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setMaximumSize(new java.awt.Dimension(72, 23));
        okButton.setMinimumSize(new java.awt.Dimension(72, 23));
        okButton.setName("okButton"); // NOI18N
        okButton.setPreferredSize(new java.awt.Dimension(72, 23));

        cancelButton.setAction(actionMap.get("cancelButtonPressed")); // NOI18N
        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
            .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Ok button was pressed handler.
	 */	
	@Action
	public void okButtonPressed() {
		// Save the new configuration
		appConfig.setHostName(serverField.getText());
		appConfig.setPort(((SpinnerNumberModel) portSpinner.getModel()).getNumber().intValue());
		appConfig.setUserName(userNameField.getText());
		appConfig.setUserPassword(new String(userPasswordField.getPassword()));
		appConfig.setUseEncryption(useEncryptionCheck.isSelected());
		appConfig.setMaxMultipleChats(((SpinnerNumberModel) maxMultipleChatsSpinner.getModel()).
				getNumber().intValue());
		appConfig.saveConfiguration();
		
		setVisible(false);
	}

	/**
	 * Cancel button was pressed handler.
	 */	
	@Action
	public void cancelButtonPressed() {
		setVisible(false);
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel connTab;
    private javax.swing.JLabel maxMultipleChatsLabel;
    private javax.swing.JSpinner maxMultipleChatsSpinner;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel portLabel;
    private javax.swing.JSpinner portSpinner;
    private javax.swing.JTextField serverField;
    private javax.swing.JLabel serverLabel;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JCheckBox useEncryptionCheck;
    private javax.swing.JLabel useEncryptionLabel;
    private javax.swing.JTextField userNameField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JPasswordField userPasswordField;
    private javax.swing.JLabel userPasswordLabel;
    private javax.swing.JPanel viewTab;
    // End of variables declaration//GEN-END:variables
	
}
