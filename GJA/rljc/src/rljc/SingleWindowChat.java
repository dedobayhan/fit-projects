/*
 * Project: RLJC - Really Lightweight Jabber Client
 * Author:  Petr Zemek, xzemek02@stud.fit.vutbr.cz
 * 
 * Copyright (C) 2009 Petr Zemek
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

package rljc;

import java.awt.BorderLayout;

/**
 * One chat in a single window.
 */
public class SingleWindowChat extends javax.swing.JFrame {
	
	/** Chat handler panel. */
	private ChatPanel chatPanel = null;
	/** Close chat panel on dispose? */
	private boolean closeChatPanelOnDispose = true;
	
	/**
	 * Creates new SingleWindowChat object.
	 */
	public SingleWindowChat() {
		initComponents();
	}
	
	/**
	 * Creates new SingleWindowChat object.
	 * 
	 * @param chatHandlerPanel Chat handler panel.
	 */
	public SingleWindowChat(ChatPanel chatHandlerPanel) {
		this();
		
		chatPanel = chatHandlerPanel;
		chatPanel.setClosable(false);
		setTitle(chatHandlerPanel.getUserChat().getUser());
		getContentPane().add(chatPanel, BorderLayout.CENTER);
		chatPanel.getFocus();
	}
	
	/**
	 * Returns chat panel of this window (can return null).
	 */
	 public ChatPanel getChatPanel() {
		 return chatPanel;
	 }
	
	/**
	 * Disposes the window without closing the chat panel.
	 */
	public void disposeWithoutClosingChatPanel() {
		closeChatPanelOnDispose = false;
		dispose();
	} 
	 
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Window was closed event.
	 * 
	 * @param evt Window event.
	 */
	private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
		if (closeChatPanelOnDispose) {
			chatPanel.close();
		}
	}//GEN-LAST:event_formWindowClosed
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new SingleWindowChat().setVisible(true);
			}
		});
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
	
}
