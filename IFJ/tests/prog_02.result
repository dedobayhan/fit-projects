-->./tests/prog_02.ifj<--
TOK_VAR          - var
TOK_DOUBLE       - double
TOK_IDENTIFIER   - epsilon
TOK_COMMA        - ,
TOK_INT          - int
TOK_IDENTIFIER   - screen_width
TOK_COMMA        - ,
TOK_INT          - int
TOK_IDENTIFIER   - screen_height
TOK_COMMA        - ,
TOK_DOUBLE       - double
TOK_IDENTIFIER   - x_min
TOK_COMMA        - ,
TOK_DOUBLE       - double
TOK_IDENTIFIER   - x_max
TOK_COMMA        - ,
TOK_DOUBLE       - double
TOK_IDENTIFIER   - y_min
TOK_COMMA        - ,
TOK_DOUBLE       - double
TOK_IDENTIFIER   - y_max
TOK_SEMICOLON    - ;
TOK_DOUBLE       - double
TOK_IDENTIFIER   - abs
TOK_LBRACKET     - (
TOK_DOUBLE       - double
TOK_IDENTIFIER   - x
TOK_RBRACKET     - )
TOK_LVINCULUM    - {
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - x
TOK_LESS         - <
TOK_CONSTDOUBLE  - 0.000000
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - prevrat
TOK_SEMICOLON    - ;
TOK_RETURN       - return
TOK_IDENTIFIER   - x
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - prevrat
TOK_LABEL        - :
TOK_RETURN       - return
TOK_CONSTDOUBLE  - 0.000000
TOK_MINUS        - -
TOK_IDENTIFIER   - x
TOK_SEMICOLON    - ;
TOK_RVINCULUM    - }
TOK_DOUBLE       - double
TOK_IDENTIFIER   - sin
TOK_LBRACKET     - (
TOK_DOUBLE       - double
TOK_IDENTIFIER   - x
TOK_RBRACKET     - )
TOK_VAR          - var
TOK_DOUBLE       - double
TOK_IDENTIFIER   - result
TOK_COMMA        - ,
TOK_DOUBLE       - double
TOK_IDENTIFIER   - new_result
TOK_COMMA        - ,
TOK_DOUBLE       - double
TOK_IDENTIFIER   - iteration
TOK_COMMA        - ,
TOK_INT          - int
TOK_IDENTIFIER   - i
TOK_SEMICOLON    - ;
TOK_LVINCULUM    - {
TOK_IDENTIFIER   - i
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 1
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - iteration
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - x
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - new_result
TOK_ASSIGNMENT   - :=
TOK_CONSTDOUBLE  - 0.000000
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - start
TOK_LABEL        - :
TOK_IDENTIFIER   - result
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - new_result
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - new_result
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - result
TOK_PLUS         - +
TOK_IDENTIFIER   - iteration
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - i
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - i
TOK_PLUS         - +
TOK_CONSTINT     - 2
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - iteration
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - iteration
TOK_MULTIPLE     - *
TOK_LBRACKET     - (
TOK_LBRACKET     - (
TOK_CONSTDOUBLE  - 0.000000
TOK_MINUS        - -
TOK_IDENTIFIER   - x
TOK_RBRACKET     - )
TOK_MULTIPLE     - *
TOK_IDENTIFIER   - x
TOK_DIVDOUBLE    - /
TOK_LBRACKET     - (
TOK_IDENTIFIER   - i
TOK_MINUS        - -
TOK_CONSTINT     - 1
TOK_RBRACKET     - )
TOK_DIVDOUBLE    - /
TOK_IDENTIFIER   - i
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - abs
TOK_LBRACKET     - (
TOK_IDENTIFIER   - new_result
TOK_MINUS        - -
TOK_IDENTIFIER   - result
TOK_RBRACKET     - )
TOK_GREATER      - >
TOK_IDENTIFIER   - epsilon
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - start
TOK_SEMICOLON    - ;
TOK_RETURN       - return
TOK_IDENTIFIER   - result
TOK_SEMICOLON    - ;
TOK_RVINCULUM    - }
TOK_VOID         - void
TOK_IDENTIFIER   - vykresli
TOK_LBRACKET     - (
TOK_RBRACKET     - )
TOK_VAR          - var
TOK_INT          - int
TOK_IDENTIFIER   - x
TOK_COMMA        - ,
TOK_INT          - int
TOK_IDENTIFIER   - y
TOK_COMMA        - ,
TOK_STRING       - string
TOK_IDENTIFIER   - char
TOK_COMMA        - ,
TOK_INT          - int
TOK_IDENTIFIER   - fx
TOK_COMMA        - ,
TOK_DOUBLE       - double
TOK_IDENTIFIER   - vfx
TOK_SEMICOLON    - ;
TOK_LVINCULUM    - {
TOK_IDENTIFIER   - y
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 0
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - y_loop
TOK_LABEL        - :
TOK_IDENTIFIER   - x
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 0
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - x_loop
TOK_LABEL        - :
TOK_IDENTIFIER   - vfx
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 0
TOK_MINUS        - -
TOK_IDENTIFIER   - sin
TOK_LBRACKET     - (
TOK_IDENTIFIER   - x_min
TOK_PLUS         - +
TOK_IDENTIFIER   - x
TOK_MULTIPLE     - *
TOK_LBRACKET     - (
TOK_IDENTIFIER   - x_max
TOK_MINUS        - -
TOK_IDENTIFIER   - x_min
TOK_RBRACKET     - )
TOK_DIVDOUBLE    - /
TOK_IDENTIFIER   - screen_width
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - fx
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - double2int
TOK_LBRACKET     - (
TOK_LBRACKET     - (
TOK_IDENTIFIER   - vfx
TOK_MINUS        - -
TOK_IDENTIFIER   - y_min
TOK_RBRACKET     - )
TOK_MULTIPLE     - *
TOK_IDENTIFIER   - screen_height
TOK_DIVDOUBLE    - /
TOK_LBRACKET     - (
TOK_IDENTIFIER   - y_max
TOK_MINUS        - -
TOK_IDENTIFIER   - y_min
TOK_RBRACKET     - )
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - char
TOK_ASSIGNMENT   - :=
TOK_CONSTSTRING  - #
TOK_SEMICOLON    - ;
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - y
TOK_EQUAL        - ==
TOK_IDENTIFIER   - fx
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - draw_point
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - char
TOK_ASSIGNMENT   - :=
TOK_CONSTSTRING  -  
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - draw_point
TOK_LABEL        - :
TOK_IDENTIFIER   - printstring
TOK_LBRACKET     - (
TOK_IDENTIFIER   - char
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - x
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - x
TOK_PLUS         - +
TOK_CONSTINT     - 1
TOK_SEMICOLON    - ;
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - x
TOK_LESSEQUAL    - <=
TOK_IDENTIFIER   - screen_width
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - x_loop
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - y
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - y
TOK_PLUS         - +
TOK_CONSTINT     - 1
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - printstring
TOK_LBRACKET     - (
TOK_CONSTSTRING  - \n
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - y
TOK_LESSEQUAL    - <=
TOK_IDENTIFIER   - screen_height
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - y_loop
TOK_SEMICOLON    - ;
TOK_RVINCULUM    - }
TOK_VOID         - void
TOK_IDENTIFIER   - main
TOK_LBRACKET     - (
TOK_RBRACKET     - )
TOK_LVINCULUM    - {
TOK_IDENTIFIER   - printstring
TOK_LBRACKET     - (
TOK_CONSTSTRING  - \n
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - epsilon
TOK_ASSIGNMENT   - :=
TOK_CONSTDOUBLE  - 0.000001
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - screen_width
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 78
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - screen_height
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 20
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - x_min
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 0
TOK_MINUS        - -
TOK_CONSTDOUBLE  - 3.140000
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - x_max
TOK_ASSIGNMENT   - :=
TOK_CONSTDOUBLE  - 3.140000
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - y_min
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 0
TOK_MINUS        - -
TOK_CONSTDOUBLE  - 1.000000
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - y_max
TOK_ASSIGNMENT   - :=
TOK_CONSTDOUBLE  - 1.000000
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - vykresli
TOK_LBRACKET     - (
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_RVINCULUM    - }
