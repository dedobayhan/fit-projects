-->./tests/prog_03.ifj<--
TOK_INT          - int
TOK_IDENTIFIER   - ack
TOK_LBRACKET     - (
TOK_INT          - int
TOK_IDENTIFIER   - m
TOK_SEMICOLON    - ;
TOK_INT          - int
TOK_IDENTIFIER   - n
TOK_RBRACKET     - )
TOK_LVINCULUM    - {
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - m
TOK_EQUAL        - ==
TOK_CONSTINT     - 0
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - case1
TOK_SEMICOLON    - ;
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - n
TOK_EQUAL        - ==
TOK_CONSTINT     - 0
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - case2
TOK_SEMICOLON    - ;
TOK_GOTO         - goto
TOK_IDENTIFIER   - case3
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - case1
TOK_LABEL        - :
TOK_RETURN       - return
TOK_IDENTIFIER   - n
TOK_PLUS         - +
TOK_CONSTINT     - 1
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - case2
TOK_LABEL        - :
TOK_RETURN       - return
TOK_IDENTIFIER   - ack
TOK_LBRACKET     - (
TOK_IDENTIFIER   - m
TOK_MINUS        - -
TOK_CONSTINT     - 1
TOK_COMMA        - ,
TOK_CONSTINT     - 1
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - case3
TOK_LABEL        - :
TOK_RETURN       - return
TOK_IDENTIFIER   - ack
TOK_LBRACKET     - (
TOK_IDENTIFIER   - m
TOK_MINUS        - -
TOK_CONSTINT     - 1
TOK_COMMA        - ,
TOK_IDENTIFIER   - ack
TOK_LBRACKET     - (
TOK_IDENTIFIER   - m
TOK_COMMA        - ,
TOK_IDENTIFIER   - n
TOK_MINUS        - -
TOK_CONSTINT     - 1
TOK_RBRACKET     - )
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_RVINCULUM    - }
TOK_VOID         - void
TOK_IDENTIFIER   - main
TOK_LBRACKET     - (
TOK_RBRACKET     - )
TOK_VAR          - var
TOK_INT          - int
TOK_IDENTIFIER   - m
TOK_COMMA        - ,
TOK_INT          - int
TOK_IDENTIFIER   - n
TOK_COMMA        - ,
TOK_INT          - int
TOK_IDENTIFIER   - max_m
TOK_COMMA        - ,
TOK_INT          - int
TOK_IDENTIFIER   - max_n
TOK_SEMICOLON    - ;
TOK_LVINCULUM    - {
TOK_IDENTIFIER   - max_m
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 4
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - max_n
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 8
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - m
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 0
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - m_cycle
TOK_LABEL        - :
TOK_IDENTIFIER   - n
TOK_ASSIGNMENT   - :=
TOK_CONSTINT     - 0
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - n_cycle
TOK_LABEL        - :
TOK_IDENTIFIER   - printstring
TOK_LBRACKET     - (
TOK_IDENTIFIER   - int2str
TOK_LBRACKET     - (
TOK_IDENTIFIER   - ack
TOK_LBRACKET     - (
TOK_IDENTIFIER   - m
TOK_COMMA        - ,
TOK_IDENTIFIER   - n
TOK_RBRACKET     - )
TOK_RBRACKET     - )
TOK_PLUS         - +
TOK_CONSTSTRING  - ;
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - n
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - n
TOK_PLUS         - +
TOK_CONSTINT     - 1
TOK_SEMICOLON    - ;
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - n
TOK_LESS         - <
TOK_IDENTIFIER   - max_n
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - n_cycle
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - printstring
TOK_LBRACKET     - (
TOK_CONSTSTRING  - \n
TOK_RBRACKET     - )
TOK_SEMICOLON    - ;
TOK_IDENTIFIER   - m
TOK_ASSIGNMENT   - :=
TOK_IDENTIFIER   - m
TOK_PLUS         - +
TOK_CONSTINT     - 1
TOK_SEMICOLON    - ;
TOK_IF           - if
TOK_LBRACKET     - (
TOK_IDENTIFIER   - m
TOK_LESS         - <
TOK_IDENTIFIER   - max_m
TOK_RBRACKET     - )
TOK_GOTO         - goto
TOK_IDENTIFIER   - m_cycle
TOK_SEMICOLON    - ;
TOK_RVINCULUM    - }
